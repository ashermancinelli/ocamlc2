(*
 * NOTE: Assertions have been autogenerated by utils/generate-test-checks.py

 * The script is designed to make adding checks to
 * a test case fast, it is *not* designed to be authoritative
 * about what constitutes a good test! The CHECK should be
 * minimized and named to reflect the test intent.



 * CHECK:       %[[VAL_0:.*]] = "ocaml.module"() <{sym_name = "Globals"}> ({
 * CHECK:         %[[VAL_1:.*]] = "ocaml.let"() <{sym_name = "x"}> ({
 * CHECK:           %[[VAL_2:.*]] = "arith.constant"() <{value = 42 : i64}> : () -> i64
 * CHECK:           %[[VAL_3:.*]] = "ocaml.convert"(%[[VAL_2]]) : (i64) -> !ocaml.box<i64>
 * CHECK:           "ocaml.yield"(%[[VAL_3]]) : (!ocaml.box<i64>) -> ()
 * CHECK:         }) : () -> !ocaml.box<i64>
 * CHECK:         %[[VAL_4:.*]] = "ocaml.let"() <{sym_name = "y"}> ({
 * CHECK:           %[[VAL_5:.*]] = "ocaml.module.lookup"() <{sym_name = "+"}> : () -> !ocaml.closure<(!ocaml.box<i64>, !ocaml.box<i64>) -> !ocaml.box<i64>>
 * CHECK:           %[[VAL_6:.*]] = "arith.constant"() <{value = 1 : i64}> : () -> i64
 * CHECK:           %[[VAL_7:.*]] = "ocaml.convert"(%[[VAL_6]]) : (i64) -> !ocaml.box<i64>
 * CHECK:           %[[VAL_8:.*]] = "ocaml.call"(%[[VAL_5]], %[[VAL_1]], %[[VAL_7]]) : (!ocaml.closure<(!ocaml.box<i64>, !ocaml.box<i64>) -> !ocaml.box<i64>>, !ocaml.box<i64>, !ocaml.box<i64>) -> !ocaml.box<i64>
 * CHECK:           "ocaml.yield"(%[[VAL_8]]) : (!ocaml.box<i64>) -> ()
 * CHECK:         }) : () -> !ocaml.box<i64>
 * CHECK:         %[[VAL_9:.*]] = "ocaml.let"() <{sym_name = "z"}> ({
 * CHECK:           %[[VAL_10:.*]] = "ocaml.embox_string"() <{input = "hello"}> : () -> !ocaml.sbox
 * CHECK:           "ocaml.yield"(%[[VAL_10]]) : (!ocaml.sbox) -> ()
 * CHECK:         }) : () -> !ocaml.sbox
 * CHECK:         %[[VAL_11:.*]] = "ocaml.let"() <{sym_name = "z"}> ({
 * CHECK:           %[[VAL_12:.*]] = "arith.constant"() <{value = 5 : i64}> : () -> i64
 * CHECK:           %[[VAL_13:.*]] = "ocaml.convert"(%[[VAL_12]]) : (i64) -> !ocaml.box<i64>
 * CHECK:           "ocaml.yield"(%[[VAL_13]]) : (!ocaml.box<i64>) -> ()
 * CHECK:         }) : () -> !ocaml.box<i64>
 * CHECK:       }) : () -> !ocaml.module<"Globals", {}>

 *)
