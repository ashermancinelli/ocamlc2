(*

 * CHECK:       %[[VAL_0:.*]] = ocaml.module @Globals : !ocaml.module<"Globals", {}> {
 * CHECK:         %[[VAL_1:.*]] = ocaml.let "x" : !ocaml.box<i64> = {
 * CHECK:           %[[VAL_2:.*]] = arith.constant 42 : i64
 * CHECK:           %[[VAL_3:.*]] = ocaml.convert %[[VAL_4:.*]] from i64 to !ocaml.box<i64>
 * CHECK:           ocaml.yield %[[VAL_5:.*]] : !ocaml.box<i64>
 * CHECK:         }
 * CHECK:         %[[VAL_6:.*]] = ocaml.let "x" : !ocaml.box<i64> = {
 * CHECK:           %[[VAL_7:.*]] = ocaml.module.lookup "+" : !ocaml.closure<(!ocaml.box<i64>, !ocaml.box<i64>) -> !ocaml.box<i64>>
 * CHECK:           %[[VAL_8:.*]] = arith.constant 1 : i64
 * CHECK:           %[[VAL_9:.*]] = ocaml.convert %[[VAL_10:.*]] from i64 to !ocaml.box<i64>
 * CHECK:           %[[VAL_11:.*]] = ocaml.call %[[VAL_12:.*]](%[[VAL_13:.*]], %[[VAL_14:.*]]) : (!ocaml.closure<(!ocaml.box<i64>, !ocaml.box<i64>) -> !ocaml.box<i64>>) : !ocaml.box<i64>, !ocaml.box<i64> -> !ocaml.box<i64>
 * CHECK:           ocaml.yield %[[VAL_15:.*]] : !ocaml.box<i64>
 * CHECK:         }
 * CHECK:         %[[VAL_16:.*]] = ocaml.let "x" : !ocaml.box<i64> = {
 * CHECK:           %[[VAL_17:.*]] = ocaml.module.lookup "*" : !ocaml.closure<(!ocaml.box<i64>, !ocaml.box<i64>) -> !ocaml.box<i64>>
 * CHECK:           %[[VAL_18:.*]] = ocaml.call %[[VAL_19:.*]](%[[VAL_20:.*]], %[[VAL_21:.*]]) : (!ocaml.closure<(!ocaml.box<i64>, !ocaml.box<i64>) -> !ocaml.box<i64>>) : !ocaml.box<i64>, !ocaml.box<i64> -> !ocaml.box<i64>
 * CHECK:           ocaml.yield %[[VAL_22:.*]] : !ocaml.box<i64>
 * CHECK:         }
 * CHECK:       }

 *)
