(*
Auto-generated by genchecks.py on 2025-04-27 10:22:43
CHECK: val none : '[[T1:.+]] option
CHECK: val some : ('[[T1:.+]] -> '[[T1]] option)
CHECK: val value : (default:'[[T1:.+]] option -> '[[T1]] -> '[[T1]])
CHECK: val get : ('[[T1:.+]] option -> '[[T1]])
CHECK: val bind : ('[[T2:.+]] option -> ('[[T2]] -> '[[T1:.+]] option) -> '[[T1]] option)
CHECK: val join : ('[[T1:.+]] option option -> '[[T1]] option)
CHECK: val map : (('[[T2:.+]] -> '[[T1:.+]]) -> '[[T2]] option -> '[[T1]] option)
CHECK: val fold : (some:'[[T2:.+]] -> ('[[T1:.+]] -> '[[T2]]) -> '[[T1]] option -> '[[T2]])
CHECK: val iter : (('[[T1:.+]] -> unit) -> '[[T1]] option -> unit)
CHECK: val is_none : ('[[T1:.+]] option -> bool)
CHECK: val is_some : ('[[T1:.+]] option -> bool)
CHECK: val equal : (('[[T1:.+]] -> '[[T1]] -> bool) -> '[[T1]] option -> '[[T1]] option -> bool)
CHECK: val compare : (('[[T1:.+]] -> '[[T1]] -> int) -> '[[T1]] option -> '[[T1]] option -> int)
CHECK: val to_result : ('[[T1:.+]] -> '[[T2:.+]] option -> ('[[T2]], '[[T1]]) result)
CHECK: val to_list : ('[[T1:.+]] option -> '[[T1]] list)
*)
